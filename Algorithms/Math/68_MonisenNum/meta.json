{
    "title": "默尼森数",
    "desc": "### 题目描述\n\nP是素数且M也是素数，并且满足等式M=2^P - 1，则称M为默尼森数。例如，P=5， M=2^P - 1 = 31，5和31都是素数，因此31是默尼森数。编写判断素数的函数并找出前5个默尼森数。\n\n### 输入描述\n\n输入为一个正整数 N。\n\n### 输出描述\n\n输出前 N 个默尼森数，两两之间用一个空格隔开。\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n3\n```\n\n```\n3 7 31\n```\n\n",
    "templateCode": "",
    "sourceCode": "def isPrime(n):\n    if n == 2: \n        return True\n    k = int(n ** 0.5)\n    for i in range(3, k, 2):\n        if n % i == 0:\n            return False\n    return True\n\ndef getMonisen(n):\n    l = [3]\n    p = 3\n    while True:\n        m = 2 ** p - 1\n        if isPrime(p) and isPrime(m):\n            l.append(m)\n            if len(l) == n:\n                return l\n        p += 2\n\nn = int(input())\nl = getMonisen(n)\nfor i in l:\n    print(i, end=' ' if i != l[-1] else '\\n')",
    "lang": "Python3",
    "testCases": [
        {
            "input": "3\n",
            "output": "3 7 31\n"
        },
        {
            "input": "5\n",
            "output": "3 7 31 127 8191\n"
        },
        {
            "input": "7\n",
            "output": "3 7 31 127 8191 131071 524287\n"
        }
    ],
    "simple_desc": "满足 M=2^p-1 的素数 M",
    "difficulty": "3",
    "tag": "数学-常见数列",
    "author": "MOOCTEST"
}