{
    "title": "实训七：OOPS！交互模式不能用了",
    "desc": "### 描述\n\n之前小南一直使用Python的交互模式来处理数据，但是因为小南需要处理好多个班级的数据，每一个班级的成绩单都需要重复一次之前的操作，现在请你想办法帮小南解决重复操作的问题。\n\n### 输入\n\n一个 list，list 中每个元素是一个 tuple。tuple 的第一个元素是学生姓名，第二个元素是学生的成绩。\n\n### 输出\n\n输出成绩大于等于80分的学生列表。\n\n评估成绩：针对成绩x有评估成绩：A(90<=x)、B(80<= x <90)、C(70<= x <80)、D(60<= x < 70)、E(x < 60)；\n\n### 样例输入\n\n```\n[('Tom', 63), ('Allen', 85), ('Adan', 97), ('Julia', 80), ('Eve', 74), ('Toney', 55)]\n```\n\n### 样例输出\n\n```\n['Allen’, ’Adan’, ‘Julia’]\n```\n",
    "templateCode": "\ndef check_student_scores(score_list):\n    # 你需要完成这个方法\n    # score_list 是一个班级的学生成绩单，每一项为 ('name', score)\n    # 你需要返回成绩大于等于 80 的学生名单\n    name_list = []\n    # todo\n    return name_list\n\nprint(check_student_scores(eval(input())))",
    "sourceCode": "l = eval(input())\n\nn = []\n\nfor i in l:\n    if i[1] >= 80:\n        n.append(i[0])\n\nprint(n)",
    "lang": "python3",
    "testCases": [
        {
            "input": "[('Tom', 63), ('Allen', 85), ('Adan', 97), ('Adam', 80), ('Eve', 74), ('Toney', 55), ('Jerry', 84)]",
            "output": "['Allen', 'Adan', 'Adam', 'Jerry']\n"
        }
    ]
}