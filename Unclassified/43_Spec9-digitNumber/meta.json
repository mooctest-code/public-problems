{
    "title": "特殊的9位数",
    "desc": "### 题目描述\n\n1~9的9个数字， 每个数字只能出现一次。要求这样的n位数：其第一位能被1整除， 前两位能被2整除， 前三位能被3整除...依次类推，前n位能被n整除。\n\n### 输入描述\n\n输入为一个正整数 n (0 < n < 10)\n\n### 输出描述\n\n输出为满足题目描述的特殊的 n 位数，如果有多个，只要输出最小的那个数即可。\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n3\n```\n\n```\n123\n```\n\n### 说明\n\n123 的第一位可以被 1 整除，前两位 12 可以被 2 整除，以此类推。\n\n注意每个数字只能出现一次。",
    "templateCode": "",
    "sourceCode": "# http://www.pythontip.com/coding/report_detail/1651/\n\nisfind=0\ndef make(i,s):\n    global isfind,n\n    if isfind:\n        return\n    else:\n        if i==n and isfind==0:\n            print(int(s))\n            isfind=1\n        else:\n            for k in range(1,10):\n                s2=s+str(k)\n                if str(k) not in s and int(s2)%(i+1)==0:\n                    make(i+1,s2)\n\nn = int(input())               \nmake(0, '')",
    "lang": "Python3",
    "testCases": [
        {
            "input": "2\n",
            "output": "12\n"
        },
        {
            "input": "4\n",
            "output": "1236\n"
        },
        {
            "input": "7\n",
            "output": "1296547\n"
        },
        {
            "input": "9\n",
            "output": "381654729\n"
        }
    ],
    "simple_desc": "给定位数n，求满足一定条件的n位数",
    "difficulty": "3",
    "tag": "图算法-搜索-深度优先|函数-递归",
    "author": "MOOCTEST"
}