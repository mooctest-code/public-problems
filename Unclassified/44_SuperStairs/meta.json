{
    "title": "变态超级楼梯",
    "desc": "### 题目描述\n\n有一楼梯共n级，刚开始时你在第零级，若每次你可以上1级，也可以上2级，...，也可以上n级。要走上第n级，共有多少种走法？\n\n### 输入描述\n\n输入为楼梯的级数 n (1 < n < 30)\n\n### 输出描述\n\n输出为走上 n 级台阶的不同走法数\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n3\n```\n\n```\n4\n```\n\n### 说明\n\n对于走上 3 级台阶，可以 1 + 1 + 1、1 + 2、2 + 1、 3 共四种走法。",
    "templateCode": "",
    "sourceCode": "print(1 << (int(input())-1))",
    "lang": "Python3",
    "testCases": [
        {
            "input": "2\n",
            "output": "2\n"
        },
        {
            "input": "3\n",
            "output": "4\n"
        },
        {
            "input": "10\n",
            "output": "512\n"
        },
        {
            "input": "12\n",
            "output": "2048\n"
        },
        {
            "input": "27\n",
            "output": "67108864\n"
        }
    ],
    "simple_desc": "你可以任意走上n级台阶，求走上n级台阶的不同走法",
    "difficulty": "2",
    "tag": "数学-其它",
    "author": "MOOCTEST"
}