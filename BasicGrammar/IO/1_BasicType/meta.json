{
    "title": "读取和输出一个数据",
    "desc": "### 题目描述\n\n本社区绝大部分题目使用的是标准的输入输出流，完成题目一般来说需要做三件事，（1）从标准输入流中读取数据；（2）使用数据完成题目；（3）将题目的结果输出到标准输出流中。\n\n题目的输入数据可能是数值，比如整数和浮点数，可能是字符和字符串，当然还有可能是比特，但在标准IO (输入流/输出流) 中，所有数据实际上都是以字符（或字节）的形式在“流动”，因此，如何将输入流中的数据读取并转化为你所需要的类型、如何将题目的结果转化为字符流是你需要学习并掌握的。\n\n本题以及接下来的几道题将帮助你快速掌握本社区绝大部分题目的数据读取和输出方式。\n\n### 输入描述\n\n> 这一部分将描述给你的数据（输入流中的数据）。若无特别说明，我们默认\n> 1. 整数的范围是 `-2147483648 ~ 2147483647`，正整数的范围是 `1 ~ 2147483647`；\n> 2. 浮点数是指64位双精度浮点数，范围约是 `-1.79e+308 ~ 1.79e+308`，精度为 15~16 位；\n> 3. 字符串的长度不会超过 100；\n\n本题的输入数据分为三行。第一行是字符串 s，第二行是一个整数 n，第三行是一个浮点数 f\n\n### 输出描述\n\n> 这一部分规定输出的形式\n>\n\n输出为三行。第一行是字符串 s ，第二行是整数 n，第三行是浮点数 f 保留三位小数的结果\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\nHello World\n12\n3.1415926\n```\n\n```\nHello World\n12\n3.141\n```\n\n### 提示\n\n> 在这一部分，我们会给你一点解题的参考。当然，许多题目没有这一部分。、\n\n#### Python3\n\nPython3 的 `input()` 都先读取一行数据为字符串，然后我们需要再将其转为需要的数据类型。\n\n浮点数保留小数点的方法，我们一般使用字符串格式化的方法，如下面代码所示。\n\n```python\ns = input()\nprint(s)\nf = float(input())\nprint('{:.3f}'.format(f))\n```\n\n#### C/C++\n\nC 和 C++ 读取数据的方式与 Python3 不同，它们在遇到空白字符（空格、tab 和回车）或者是不符合当前变量的数据类型时就停止本次读取。比如 `Hello World`，只会读取 `Hello`，将 `123abc` 读取到整数变量时，只会读取 `123`，`abc` 则仍然在输入流中。\n\n所以 C 语言读取一行数据需要使用 `gets()`，C++ 需要使用 `getline()`。\n\n```c\nchar s[100];\ngets(s);\nprintf(\"%s\\n\", s);\ndouble f;\nscanf(\"%lf\", &f);\nprintf(\"%.3lf\\n\", f);\n```\n\n对于 C++，浮点数保留小数的方法如下所示：\n\n```c++\nstring s;\ngetline(cin, s);\ncout << s << endl;\ndouble f;\ncin >> f;\ncout.precision(3);\ncout << fixed << f << endl;\n```\n\n#### Java\n\nJava 的读取和输出方法类似于 C/C++：\n\n```java\nScanner scanner = new Scanner(System.in);\nString str = scanner.nextLine();\nSystem.out.println(str);\ndouble f = scanner.nextDouble();\nSystem.out.printf(\"%.3f\\n\", f);\nscanner.close();\n```\n\n> 上面 C，C++ 和 Java 的代码只是写了主要语句，别忘了写包含这些代码的主函数",
    "templateCode": "",
    "sourceCode": "s = input()\nn = int(input())\nf = float(input())\n\nprint(s)\nprint(n)\nprint('{:.3f}'.format(f))\n",
    "lang": "Python3",
    "testCases": [
        {
            "input": "Hello World\n12\n3.1415936\n",
            "output": "Hello World\n12\n3.142\n"
        },
        {
            "input": "Hello Python\n0\n0.123456\n",
            "output": "Hello Python\n0\n0.123\n"
        },
        {
            "input": "Hello Kitty\n-1\n11.111111\n",
            "output": "Hello Kitty\n-1\n11.111\n"
        }
    ],
    "simple_desc": "类型转换的读取和输出",
    "difficulty": "1",
    "tag": "输入输出-标准流|内置全局函数1-类型转换-类型转换",
    "author": "谢子聪"
}