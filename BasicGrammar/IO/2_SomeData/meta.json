{
    "title": "\u8bfb\u53d6\u548c\u8f93\u51fa\u51e0\u4e2a\u6570\u636e",
    "desc": "### \u9898\u76ee\u63cf\u8ff0\n\n\u5728\u4e0a\u4e00\u9898\u4e2d\uff0c\u6211\u4eec\u8bfb\u53d6\u548c\u8f93\u51fa\u4e86\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u636e\uff0c\u4f46\u662f\u4e00\u884c\u4e2d\u53ea\u6709\u4e00\u4e2a\u6570\u636e\u3002\u5982\u679c\u4e00\u884c\u4e2d\u6709\u591a\u4e2a\u6570\u636e\uff0c\u8be5\u5982\u4f55\u8bfb\u53d6\u5462\uff0c\u53c8\u8be5\u5982\u4f55\u8f93\u51fa\u5462\uff1f\n\n### \u8f93\u5165\u63cf\u8ff0\n\n> \u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u4f1a\u8bf4\u660e\u201c\u4e24\u4e24\u95f4\u6709\u7a7a\u683c\u201d\uff0c\u5982\u679c\u6ca1\u6709\u8bf4\u660e\uff0c\u8bf7\u9ed8\u8ba4\u662f\u4e24\u4e24\u95f4\u7528\u7a7a\u683c\u9694\u5f00\n\n\u5305\u542b\u4e24\u884c\u3002\u7b2c\u4e00\u884c\u6709\u4e24\u4e2a\u5b57\u7b26\u4e32 `s1 s2`\uff0c\u4e24\u4e24\u95f4\u6709\u4e00\u4e2a\u7a7a\u683c\uff1b\u7b2c\u4e8c\u884c\u6709\u4e09\u4e2a\u6d6e\u70b9\u6570 `a b c`\uff0c\u4e24\u4e24\u95f4\u6709\u4e00\u4e2a\u7a7a\u683c\u3002\n\n### \u8f93\u51fa\u63cf\u8ff0\n\n\u8f93\u51fa\u4e24\u884c\u3002\u7b2c\u4e00\u884c\u6309 `s2 s1` \u8f93\u51fa\u8fd9\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0c\u4e24\u4e24\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\uff1b\u7b2c\u4e8c\u884c\u6309 `c b a` \u7684\u987a\u5e8f\u8f93\u51fa\u8fd9\u4e09\u4e2a\u6d6e\u70b9\u6570\uff0c\u5404\u4fdd\u7559\u4e24\u4f4d\u5c0f\u6570\uff0c\u4e24\u4e24\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\n\n### \u6837\u4f8b\u8f93\u5165\n\n```\nHello World\n3.1415 0.618 11.11\n```\n\n### \u6837\u4f8b\u8f93\u51fa\n\n```\nWorld Hello\n11.11 0.62 3.14\n```\n\n### \u63d0\u793a\n\n#### Python3\n\n\u4ece\u4e0a\u4e00\u9898\u4e2d\u5e94\u8be5\u53ef\u4ee5\u770b\u51fa\uff0cPython3 \u7684 `input()` \u8bfb\u53d6\u4e00\u884c\u6570\u636e\u4e3a\u5b57\u7b26\u4e32\uff0c\u6211\u4eec\u9700\u8981\u518d\u8f6c\u6362\u4e3a\u6307\u5b9a\u7684\u7c7b\u578b\u3002\u90a3\u4e48\u8fd9\u4e00\u9898\u4e2d\u5728\u8bfb\u53d6\u4e00\u884c\u6570\u636e\u540e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 `split()` \u4ee5\u7a7a\u683c\u4e3a\u5206\u9694\u7b26\u5c06\u5b57\u7b26\u4e32\u5206\u9694\u4e3a\u591a\u4efd\uff0c\u4ee3\u8868\u591a\u4e2a\u6570\u636e\uff1a\n\n```python\ns1, s2 = input().split()\n```\n\n\u5bf9\u4e8e\u6d6e\u70b9\u6570\uff0c\u5728\u5206\u9694\u540e\uff0c\u6211\u4eec\u9700\u8981\u5c06\u6bcf\u4e00\u4e2a\u5b57\u7b26\u4e32\u8f6c\u4e3a\u6d6e\u70b9\u578b\uff1a\n\n```python\ninp = input().split()\na, b, c = float(inp[0]), float(inp[1]), float(inp[2])\n```\n\n*\u4e0a\u9762\u8fd9\u79cd\u65b9\u6cd5\u6709\u70b9\u9ebb\u70e6\uff0c\u6211\u4eec\u4f1a\u5728\u4e0b\u4e00\u9898\u4e2d\u4ecb\u7ecd\u66f4\u65b9\u4fbf\u7684\u65b9\u6cd5\u3002\n\n\u8f93\u5165\u89e3\u51b3\u4e86\uff0c\u63a5\u4e0b\u6765\u8003\u8651\u5982\u4f55\u5728\u4e00\u884c\u4e2d\u8f93\u51fa\u591a\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u6570\u636e\u3002\u8f93\u51fa\u4e24\u4e2a\u7528\u7a7a\u683c\u9694\u5f00\u7684\u5b57\u7b26\u4e32\u5f88\u7b80\u5355\uff1a\n\n```python\nprint(s1, s2)\n```\n\n\u5bf9\u4e8e\u6d6e\u70b9\u6570\uff0c\u4e0a\u4e00\u9898\u4e2d\u6211\u4eec\u5b66\u4e60\u4e86\u5982\u4f55\u8f93\u51fa\u4e00\u4e2a\u4fdd\u7559\u4e09\u4f4d\u5c0f\u6570\u7684\u6d6e\u70b9\u6570\uff0c\u5728\u8fd9\u91cc\u5176\u5b9e\u4e5f\u4e00\u6837\uff1a\n\n```python\nprint('{:.2f} {:.2f} {:.2f}'.format(a, b, c))\n```\n\n#### C\n\n\u5728\u4e0a\u4e00\u9898\u4e2d\uff0c\u6211\u4eec\u4e3a\u4e86\u8bfb\u53d6\u5305\u542b\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u4f7f\u7528\u4e86 `gets()` \u8bfb\u53d6\u4e00\u884c\u6570\u636e\uff0c\u800c\u8fd9\u9898\u4e2d\u4e0d\u8981\u8bfb\u53d6\u7a7a\u683c\uff0c\u6240\u4ee5\u4f7f\u7528 `scanf()` \uff1a\n\n```c\nchar s1[100], s2[100];\nscanf(\"%s %s\", s1, s2);\nprintf(\"%s %s\\n\", s1, s2);\n```\n\n\u8bfb\u53d6\u548c\u8f93\u51fa\u6d6e\u70b9\u6570\u4e5f\u7c7b\u4f3c\uff1a\n\n```c++\ndouble a, b, c;\nscanf(\"%lf %lf %lf\", &a, &b, &c);\nprintf(\"%.2lf %.2lf %.2lf\\n\", a, b, c);\n```\n\n#### C++\n\n\u540c C \u8bed\u8a00\uff0c\u8fd9\u6b21\u4e0d\u7528\u8bfb\u53d6\u4e00\u884c\u6570\u636e\uff0c\u6240\u4ee5\u4f7f\u7528 `cin` \u800c\u4e0d\u662f `getline()`\u3002\n\n```c++\nstring s1, s2;\ncin >> s1 >> s2;\ncout << s1 << \" \" << s2 << endl;\n```\n\n\u5bf9\u4e8e\u6d6e\u70b9\u6570\uff0c\u8ddf\u4e0a\u4e00\u9898\u4e5f\u7c7b\u4f3c\uff1a\n\n```c++\ndouble a, b, c;\ncin >> a >> b >> c;\ncout.precision(2);\ncout << fixed << a << \" \" << b << \" \" << c << endl;\n```\n\n#### Java\n\nJava \u7684\u6570\u636e\u8bfb\u53d6\u548c\u8f93\u51fa\u673a\u5236\u7c7b\u4f3c\u4e8e C/C++\uff1a\n\n```java\nScanner scanner = new Scanner(System.in);\n\nString s1 = scanner.next();\nString s2 = scanner.next();\nSystem.out.printf(\"%s %s\\n\", s1, s2);\n\ndouble a = scanner.nextDouble();\ndouble b = scanner.nextDouble();\ndouble c = scanner.nextDouble();\nSystem.out.printf(\"%.2f %.2f %.2f\\n\", a, b, c);\n\nscanner.close();\n```\n\n",
    "templateCode": "",
    "sourceCode": "print(*input().split()[::-1])\nprint(*map(lambda x: '{:.2f}'.format(float(x)), input().split()[::-1]))",
    "lang": "Python3",
    "testCases": [
        {
            "input": "Hello World\n3.1415 0.618 11.11",
            "output": "World Hello\n11.11 0.62 3.14\n"
        },
        {
            "input": "Hello Python\n123.456 -123.456 0 ",
            "output": "Python Hello\n0.00 -123.46 123.46\n"
        },
        {
            "input": "Hello C/C++\n7.54343 32.8626 32.652523",
            "output": "C/C++ Hello\n32.65 32.86 7.54\n"
        }
    ]
}