{
    "title": "读取和输出多行多列数据",
    "desc": "### 题目描述\n\n经过之前题目的训练，如果给你一个确定每行有多少个数据的多行输入，比如读取和输出一个 3*3 的矩阵，应该是没有什么问题的吧？\n\n再考虑一个最最极端的情况：不告诉你有多少行，也不告诉你每行有几个数据，请你读取和输出这些数据。\n\n> 不用担心，这种情况基本上是不会出现的。\n\n### 输入描述\n\n第一行包含两个正整数 n 和 m，分别代表矩阵的行数和列数。\n\n接下来第二行到第 n+1 行，每行有 m 个整数，两两间用一个空格隔开。\n\n第 n+2 行开始共有 k 行，k 不确定，每行有不确定个数的整数，两两间用一个空格隔开。\n\n### 输出描述\n\n输出这个矩阵中每个整数都乘以 2 的结果，每行中数据两两间用一个空格隔开。\n\n接下来输出这 k 行每行整数的和，每个占一行。\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n3 3\n1 2 3\n4 5 6\n7 8 9\n-1 0 1\n1 2 3 4 5\n13 14 15\n12345\n```\n\n```\n2 4 6\n8 10 12\n14 16 18\n0\n15\n42\n12345\n```\n\n### 提示\n\n对于确定行数和列数的矩阵的读取和输出，就不赘述了。这里讲讲第二个问题的解决方法。\n\n思路其实都一样的：每次读取一行直到结尾，然后用空格将每一行字符串分隔为多个子字符串，再将这些子串转化为指定类型的数据，区别主要是如何分隔字符串以及如何转化数据。\n\n#### Python3\n\n对于 Python3 来说，用之前学到的方法足以解决。\n\n#### C\n\n使用循环或者用 `strtok` 将一行字符串以空格分隔开 ，再对每一个子串使用 `sscanf()` 将其转化为需要的数据。\n\n#### C++\n\n将一行数据放入 `stringstream`，然后跟以前读取一行数据一样读取出来。\n\n#### Java\n\n可以和 Python 类似：读取一行，分隔为子串，然后再转化每一个数据。\n\n也可以和 C++ 类似：将读取的一行数据放入到 `Scanner` 中，再跟之前一样读取出来。",
    "templateCode": "",
    "sourceCode": "n, m = map(int, input().split())\nfor i in range(n):\n    a = map(int, input().split())\n    print(*map(lambda x: x*2, a))\n\ntry:\n    while True:\n        print(sum(map(int, input().split())))\nexcept EOFError:\n    pass",
    "lang": "Python3",
    "testCases": [
        {
            "input": "3 3\n1 2 3\n4 5 6\n7 8 9\n-1 0 1\n1 2 3 4 5\n13 14 15\n12345\n",
            "output": "2 4 6\n8 10 12\n14 16 18\n0\n15\n42\n12345\n"
        },
        {
            "input": "4 4\n1 1 1 1\n2 2 2 2\n3 3 3 3\n4 4 4 4\n123 67 456 89 67 4432\n872 463 32\n432\n12376432 123 1671\n12367 3267\n",
            "output": "2 2 2 2\n4 4 4 4\n6 6 6 6\n8 8 8 8\n5234\n1367\n432\n12378226\n15634\n"
        }
    ],
    "simple_desc": "矩阵和不定长数组的读取和输出",
    "difficulty": "3",
    "tag": "输入输出-标准流|流程控制-循环|序列操作-map()|流程控制-异常|内助全局函数1-数学运算-sum()",
    "author": "谢子聪"
}