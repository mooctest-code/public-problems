{
    "title": "读取和输出多行数据",
    "desc": "### 题目描述\n\n前面的题目都是读取和输出一行或者几行数据，现在考虑读取和输出很多行数据。\n\n### 输入描述\n\n输入包含多行，每行为一个整数。\n\n### 输出描述\n\n输出多行，每行为一个读取的整数。\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n1\n2\n3\n```\n\n```\n1\n2\n3\n```\n\n### 提示\n\n上一道题中，我们读取了一行没有说明数量的数据，而这一题则是没有说明行数的多行数据。\n\n#### Python3\n\n对于 Python 来说，这次就没有以前那样简单了，你需要判断输入流是否结束：\n\n```python\ntry:\n    while True:\n        inp = input()\n        print(inp)\nexcept EOFError:\n    pass\n```\n\n另外需要说明的是，输入流和输出流是两个分开的流。你可以如上面的代码一样，读取数据的同时，即时输出结果，这在很多题目上是有用的。\n\n#### C、C++ 和 Java\n\n之前提到，这些语言将空格、Tab 和回车都视为“空白键”，所以读取的方式和判断结束的方式和上一题是一样的。",
    "templateCode": "",
    "sourceCode": "try:\n    while True:\n        a = int(input())\n        print(a)\nexcept EOFError:\n    pass\n",
    "lang": "Python3",
    "testCases": [
        {
            "input": "1\n2\n3\n",
            "output": "1\n2\n3\n"
        },
        {
            "input": "-1\n0\n1\n",
            "output": "-1\n0\n1\n"
        }
    ],
    "simple_desc": "多行数据的读取和输出",
    "difficulty": "2",
    "tag": "输入输出-标准流|流程控制-循环|流程控制-异常",
    "author": "谢子聪"
}