{
    "title": "批量修改字符串",
    "desc": "### 题目描述\n\n假设已有一个姓名列表，从输入获得一个表示姓名对应人共性内容的字符串和一条下划线，将其插入列表中每个姓名前，输出序号（从1开始）和修改后的姓名。\n\n### 输入描述\n\n输入分为两行，第一行为一个每个名字前需要加的共性内容字符串，第二行为姓名列表。\n\n### 输出描述\n\n输出除了需要加上共性前缀外，需要再在前面加一个序号，如样例输出所示\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\nNJU_\n['Liuyun', 'Xuxu', 'Yangjun']\n```\n\n```\n['1 NJU_Liuyun', '2 NJU_Xuxu', '3 NJU_Yangjun']\n```\n",
    "templateCode": "",
    "sourceCode": "p = input()\nl = eval(input())\n\nprint(['{} {}{}'.format(i, p, l[i]) for i in range(len(l))])",
    "lang": "Python3",
    "testCases": [
        {
            "input": "NJU_\n['Liuyun', 'Xuxu', 'Yangjun', 'Jiangchen']\n",
            "output": "['0 NJU_Liuyun', '1 NJU_Xuxu', '2 NJU_Yangjun', '3 NJU_Jiangchen']\n"
        },
        {
            "input": "NJUSE_\n['Liuyun', 'Xuxu', 'Yangjun', 'Xiaoming']\n",
            "output": "['0 NJUSE_Liuyun', '1 NJUSE_Xuxu', '2 NJUSE_Yangjun', '3 NJUSE_Xiaoming']\n"
        },
        {
            "input": "English~\n['Hanmeimei', 'Xiaoming', 'Lilei']\n",
            "output": "['0 English~Hanmeimei', '1 English~Xiaoming', '2 English~Lilei']\n"
        }
    ],
    "simple_desc": "按照一定格式格式化字符串",
    "difficulty": "2",
    "tag": "字符串-格式化|列表-遍历",
    "author": "MOOCTEST"
}