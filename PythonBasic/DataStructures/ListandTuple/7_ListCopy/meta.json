{
    "title": "列表复制",
    "desc": "### 题目描述\n\n在许多编程语言中，存在着“浅拷贝”和“深拷贝”两个概念。“浅拷贝”只复制内存地址，也就是对原数据对象的一个引用，但你改变了原数据的值后，“浅拷贝”的值也会变化。而“深拷贝”则是开辟了新的内存空间来存原数据对象的值。\n\n给你一个列表 L1，请你深拷贝 L1 得到 L2，并修改 L2 的第一个元素为 0。\n\n### 输入描述\n\n一个 Python List 形式的整数列表 L1，格式参考样例输入。\n\n### 输出描述\n\n第一行输出列表 L2，为列表 L1 的深拷贝，并且将第一个元素的值改为 0。\n\n第二行输出列表 L1。\n\n输出格式请参考样例输出。\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n[1, 2, 3]\n```\n\n```\n[0, 2, 3]\n[1, 2, 3]\n```\n\n### 题目来源\n\nRUNOOB.COM",
    "templateCode": "",
    "sourceCode": "l1 = eval(input())\nl2 = l1.copy()\nl2[0] = 0\nprint(l2)\nprint(l1)\n",
    "lang": "Python3",
    "testCases": [
        {
            "input": "[1, 2, 3]\n",
            "output": "[0, 2, 3]\n[1, 2, 3]\n"
        },
        {
            "input": "[7, 4, 3]\n",
            "output": "[0, 4, 3]\n[7, 4, 3]\n"
        }
    ],
    "simple_desc": "深拷贝列表",
    "difficulty": "1",
    "tag": "列表-内置函数-copy()|列表-运算符-[]",
    "author": "RUNOOB"
}