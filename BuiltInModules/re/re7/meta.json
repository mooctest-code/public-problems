{
    "title": "正则表达式匹配的应用",
    "desc": "### 题目描述\n请实现一个函数用来匹配包括'.'和'*'的正则表达式。模式中的字符'.'表示任意一个字符，而'*'表示它前面的字符可以出现任意次（包含0次）。 在本题中，匹配是指字符串的所有字符匹配整个模式。\n例如，字符串“aaa”与模式“a.a”和“ab*ac*a”匹配，但是和“aa.a”不匹配\n\n### 输入描述\n第一行为测试用例的个数\n接下来每两行为一个测试用例，测试用例中的第一行是待匹配字符串，第二行为模式串\n\n### 输出描述\n输出为每个样例的匹配结果，匹配返回True，不匹配返回False\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n1\naaa\na.a\n```\n\n```\nTrue\n```\n\n1\naaa\na.a\n输出：\nFalse\n\n",
    "templateCode": "",
    "sourceCode": "def match( s, pattern):\n    if len(s) == 0 and len(pattern) == 0:\n        return True\n    elif len(s) != 0 and len(pattern) == 0:\n        return False\n    elif len(s) == 0 and len(pattern) != 0:\n        if len(pattern) > 1 and pattern[1] == '*':\n            return match(s, pattern[2:])\n        else:\n            return False\n    else:\n        if len(pattern) > 1 and pattern[1] == '*':\n            if s[0] != pattern[0] and pattern[0] != '.':\n                return match(s, pattern[2:])\n            else:\n                return match(s, pattern[2:]) or match(s[1:], pattern[2:]) or match(s[1:], pattern)\n        else:\n            if s[0] == pattern[0] or pattern[0] == '.':\n                return match(s[1:], pattern[1:])\n            else:\n                return False\nnum = int(input())\nfor i in range(num):\n    s = input()\n    pattern = input()\n    print(match(s,pattern))",
    "lang": "Python3",
    "testCases": [
        {
            "input": "1\naaa\na.a\n",
            "output": "True\n"
        },
        {
            "input": "1\naaaa\na..a\n",
            "output": "True\n"
        },
        {
            "input": "2\naaa\nab*ac*a\nabacccca\nab*ac*a\n",
            "output": "True\nTrue\n"
        },
        {
            "input": "1\n\n.*",
            "output": "True\n"
        }
    ]
}