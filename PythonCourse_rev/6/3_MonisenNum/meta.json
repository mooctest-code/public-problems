{
    "title": "默尼森数",
    "desc": "### 题目描述\n\nP 是素数且 M 也是素数，并且满足等式 M=2^P - 1，则称 M 为默尼森数。例如，P=5， M=2^P-1=31，5 和 31 都是素数，因此 31 是默尼森数。编写判断素数的函数并找出第 n 个默尼森数。\n\n### 输入描述\n\n输入为一个正整数 ｎ（0 < n < 7）\n\n### 输出描述\n\n输出第 n 个默尼森数\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n2\n```\n\n```\n31\n```\n\n",
    "templateCode": "",
    "sourceCode": "'''TESTCASE\n\n\ndef isPrime(n):\n    if n < 2:\n        return False\n    if n % 2 == 0:\n        return n == 2\n\n    k = int(n ** 0.5)+1\n    for i in range(3, k, 2):\n        if n % i == 0:\n            return False\n    return True\n\n\ndef getMonisen(n):\n    cnt = 0\n    p = 3\n    while True:\n        m = 2 ** p - 1\n        if isPrime(p) and isPrime(m):\n            cnt += 1\n            if cnt == n:\n                return m\n        p += 2\n\n\nn = int(input())\nprint(getMonisen(n))\n",
    "lang": "Python3",
    "testCases": [
        {
            "input": "2\n",
            "output": "31\n"
        },
        {
            "input": "3\n",
            "output": "127\n"
        },
        {
            "input": "4\n",
            "output": "8191\n"
        },
        {
            "input": "5\n",
            "output": "131071\n"
        },
        {
            "input": "6\n",
            "output": "524287\n"
        }
    ],
    "simple_desc": "满足 M=2^p-1 的素数 M",
    "difficulty": "3",
    "tag": "数学问题-常见数列",
    "author": "MOOCTEST"
}