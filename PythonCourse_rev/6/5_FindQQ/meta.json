{
    "title": "查找QQ号",
    "desc": "### 题目描述\n\n给你 N 个QQ号和姓名，请你用字典将这些数据组织起来，实现如下程序功能：\n\n1. 定义函数 find_QQ()，功能是根据传入的存放姓名和对应QQ号的字典及某一个人的姓名（形参）在字典中查找对应的QQ号，若找到则返回该QQ号，若找不到则返回None；\n2. 定义函数 find_luckyguys()，查询所有拥有QQ靓号（5位数或小于5位数）的人的姓名，将其放入一个列表中，按姓名字典序排列，返回该列表；\n\n### 输入描述\n\n输入第一行为正整数 N，表示接下来有 N 行。接下来 N 行每行有一个QQ号和姓名，用空格隔开；\n\n输入第 N+2 行为某一个人的姓名 M\n\n### 输出描述\n\n输出分为两行。第一行输出姓名为 M 的人的 QQ 号，没有则输出 `Not Found.`；第二行输出所有拥有QQ靓号的人的姓名，没有则输出 `Not Found.`，两两间用空格隔开。\n\n格式请参考测试样例。\n\n### 测试样例\n\n#### 样例1: 输入-输出\n\n```\n3\n123456 xiaoming\n12345 xiaohong\n1234 xiaoli\nxiaohong\n```\n\n```\nxiaohong's QQ is 12345\nLucky guys: xiaohong xiaoli\n```\n\n#### 样例2: 输入-输出\n\n```\n1\n123456 xiaoming\nxiaohong\n```\n\n```\nNot Found\nNot Found\n```\n\n",
    "templateCode": "def find_QQ(QQ: dict, name: str):\n    # 从字典 QQ 中查找姓名为 name 的人的 QQ 号并返回\n    # 不存在则返回 None\n    return None\n\n\ndef find_luckyguys(QQ: dict):\n    # 从字典 QQ 中查找所有拥有 QQ 靓号（5位数或小于5位数）的人的姓名\n    # 返回这些人的姓名列表，按字典序排列\n    return []\n\n\nn = int(input())\nQQ = {}\nfor i in range(n):\n    qq, name = input().split()\n    QQ[name] = qq\n\nname = input()\n\nqq = find_QQ(QQ, name)\nluckyguys = find_luckyguys(QQ)\n",
    "sourceCode": "'''TESTCASE\n\n\ndef find_QQ(QQ: dict, name: str):\n    # 从字典 QQ 中查找姓名为 name 的人的 QQ 号并返回\n    # 不存在则返回 None\n    return QQ.get(name, None)\n\n\ndef find_luckyguys(QQ: dict):\n    # 从字典 QQ 中查找所有拥有 QQ 靓号（5位数或小于5位数）的人的姓名\n    # 返回这些人的姓名列表，按字典序排列\n    return sorted(map(lambda x: x[0],\n                      filter(lambda x: len(x[1]) < 6,\n                             QQ.items())))\n\n\ndef found(x):\n    if not x:\n        print('Not Found')\n    return bool(x)\n\n\nn = int(input())\nQQ = {}\nfor i in range(n):\n    qq, name = input().split()\n    QQ[name] = qq\n\nname = input()\nqq = find_QQ(QQ, name)\nluckyguys = find_luckyguys(QQ)\n\nif found(qq):\n    print(name + '\\'s QQ is', qq)\n\nif found(luckyguys):\n    print('Lucky guys:', ' '.join(luckyguys))\n",
    "lang": "Python3",
    "testCases": [
        {
            "input": "3\n123456 xiaoming\n12345 xiaohong\n1234 xiaoli\nxiaohong\n",
            "output": "xiaohong's QQ is 12345\nLucky guys: xiaohong xiaoli\n"
        },
        {
            "input": "1\n123456 xiaoming\nxiaohong\n",
            "output": "Not Found\nNot Found\n"
        },
        {
            "input": "4\n123456 xiaoming\n12345 xiaohong\n1234 xiaoli\n42398 damao\nxiaomao\n",
            "output": "Not Found\nLucky guys: damao xiaohong xiaoli\n"
        },
        {
            "input": "1\n123456 xiaoming\nxiaoming\n",
            "output": "xiaoming's QQ is 123456\nNot Found\n"
        }
    ],
    "simple_desc": "从QQ号字典中查找指定QQ号",
    "difficulty": "2",
    "tag": "字典|函数",
    "author": "张莉"
}